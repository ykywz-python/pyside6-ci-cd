name: Build Cross-Platform PySide6 App with UV Sync (uv.lock)

on:
  push:
    # Trigger untuk push ke main (untuk testing)
    branches:
      - main
    # Trigger khusus untuk TAG (untuk Release)
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # 1. Job untuk Windows (.exe)
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install UV and Create Venv
      run: |
        pip install uv
        uv venv .venv

    - name: Sync dependencies with UV
      run: |
        .venv\Scripts\activate # Aktivasi venv Windows
        # Menginstal dependensi berdasarkan file uv.lock (disesuaikan dengan permintaan terakhir Anda)
        uv sync
        
    - name: Run PyInstaller Build
      run: |
        .venv\Scripts\activate
        pyinstaller --onefile --windowed --name="pyside6-ci-cd" main.py
        
    - name: Upload Artifact (Windows EXE)
      uses: actions/upload-artifact@v4
      with:
        name: pyside6-ci-cd-Windows
        path: dist/pyside6-ci-cd.exe

  # 2. Job untuk macOS (.app)
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install UV and Create Venv
      run: |
        pip install uv
        uv venv .venv

    - name: Sync dependencies with UV
      run: |
        source .venv/bin/activate # Aktivasi venv macOS/Linux
        # Menginstal dependensi berdasarkan file uv.lock (disesuaikan dengan permintaan terakhir Anda)
        uv sync

    - name: Run PyInstaller Build
      run: |
        source .venv/bin/activate
        pyinstaller --windowed --name="pyside6-ci-cd" main.py
    
    - name: Zip and Upload Artifact (macOS .app)
      run: |
        zip -r pyside6-ci-cd-macOS.zip dist/pyside6-ci-cd.app
        
    - uses: actions/upload-artifact@v4
      with:
        name: pyside6-ci-cd-macOS
        path: pyside6-ci-cd-macOS.zip
        
  # 3. Job untuk Linux (Executable)
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install UV and Create Venv
      run: |
        pip install uv
        uv venv .venv

    - name: Sync dependencies with UV
      run: |
        source .venv/bin/activate # Aktivasi venv macOS/Linux
        # Menginstal dependensi berdasarkan file uv.lock (disesuaikan dengan permintaan terakhir Anda)
        uv sync

    - name: Run PyInstaller Build
      run: |
        source .venv/bin/activate
        pyinstaller --onefile --windowed --name="pyside6-ci-cd" main.py

    - name: Upload Artifact (Linux Executable)
      uses: actions/upload-artifact@v4
      with:
        name: pyside6-ci-cd-Linux
        path: dist/pyside6-ci-cd

  # 4. Job untuk Membuat Release dan Melampirkan semua Artifact
  create-release:
    needs: [build-windows, build-macos, build-linux]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write # Diperlukan untuk mengatasi error 403
    steps:
      - name: Download all artifacts
        # PERBAIKAN INDENTASI: 'uses' harus sejajar dengan 'name'
        uses: actions/download-artifact@v4
        with:
          # Unduh semua artifacts ke folder ini
          path: release_artifacts

      - name: Create GitHub Release
        # PERBAIKAN INDENTASI: 'uses' harus sejajar dengan 'name'
        uses: softprops/action-gh-release@v1
        with:
          # Gunakan TAG sebagai nama rilis (misalnya v1.0.0)
          tag_name: ${{ github.ref_name }} 
          name: Release ${{ github.ref_name }} 
          body: |
            Aplikasi PySide6 Lintas Platform.
            
            Rilis ini mencakup executable untuk:
            - Windows (EXE)
            - macOS (ZIP)
            - Linux (Executable)
          # Lampirkan semua file dari folder yang diunduh
          files: release_artifacts/**/*
        env:
          # Token otentikasi
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}